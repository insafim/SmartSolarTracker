    PROCESSOR   16F877A
    #INCLUDE    <P16F877A.INC> 
    
    ; PIC16F877A Configuration Bit Settings
    ; Assembly source line config statements
    ; CONFIG
    ; __config 0x3F3A
    __CONFIG _FOSC_HS & _WDTE_OFF & _PWRTE_OFF & _BOREN_OFF & _LVP_OFF & _CPD_OFF & _WRT_OFF & _CP_OFF


    
    ORG		0x00	    ;SET THE ORIGIN VECTOR
    EAST	EQU 0X20
    WEST	EQU 0X21
    DEF		EQU 0X22
    TEMPW	EQU 0X23
    OUTPUT	EQU 0X24
    COUNT	EQU 0X25	      
    COUNT1	EQU 0X26	  
    COUNT2	EQU 0X27
    
    GOTO	MAIN	    ;START THE PROGRAM
    
    ORG		0X04
    GOTO	INTERRUPT
    
    
MAIN
    ;******CONFIGURE I/O*******
    BCF		STATUS,6    ;SELECT BANK 1(01)
    BSF		STATUS,5  
    
    CLRF	TRISD	    ;PORTD CONFIGURED AS OUTPUT
    CLRF	TRISC	    ;PORTC CONFIGURED AS OUTPUT
    BSF		TRISB,0	    ;PORTB,BIT0 CONFIGURED AS INPUT
  	    
    MOVLW	B'11111111' ;PORTA CONFIGURED AS INPUT
    MOVWF	TRISA
    
    BCF		ADCON1,7    ;LEFT JUSTIFIED
    
    BCF		ADCON1,3    ;ANALOG WITH AN3/RA3=Vref+(0001)
    BCF		ADCON1,2
    BCF		ADCON1,1
    BSF		ADCON1,0
    
    BCF		STATUS,5    ;SELECT BANK 0(00)
    CLRF	PORTB	    ;PORT B IS CLEARED
    
    BSF		ADCON0,7    ;SELECT CLOCK (Fosc/32)
    BCF		ADCON0,6 
    
    ;*********SET UP THE INTERRUPT REGISTER**********
    BSF		INTCON,7    ;GIE-Global Interrrupt Enable(1=enable)
    BSF		INTCON,4    ;INTE-RB0 Interrupt Enable(1=enable)
    BCF		INTCON,1    ;Clear Flag Bit Just In Case
    
    MOVLW	D'3'	    ;ALLOWABLE DIFFERENCE BETWEEN EAST & WEST
    MOVWF	DEF
   

START1
    CALL	ADC
    CALL	COMPARE
    BTFSS	OUTPUT,0
    GOTO	START1
    BTFSS	OUTPUT,1
    GOTO	ETURN1
    GOTO	WTURN1
    
START2
    CALL	ADC
    CALL	COMPARE
    BTFSS	OUTPUT,0
    GOTO	START2
    BTFSS	OUTPUT,1
    GOTO	ETURN2
    GOTO	WTURN2

START3
    CALL	ADC
    CALL	COMPARE
    BTFSS	OUTPUT,0
    GOTO	START3
    BTFSS	OUTPUT,1
    GOTO	ETURN3
    GOTO	WTURN3

START4
    CALL	ADC
    CALL	COMPARE
    BTFSS	OUTPUT,0
    GOTO	START4
    BTFSS	OUTPUT,1
    GOTO	ETURN4
    GOTO	WTURN4
    
START5
    CALL	ADC
    CALL	COMPARE
    BTFSS	OUTPUT,0
    GOTO	START5
    BTFSS	OUTPUT,1
    GOTO	ETURN5
    GOTO	WTURN5
    
START6
    CALL	ADC
    CALL	COMPARE
    BTFSS	OUTPUT,0
    GOTO	START6
    BTFSS	OUTPUT,1
    GOTO	ETURN6
    GOTO	WTURN6
    
START7
    CALL	ADC
    CALL	COMPARE
    BTFSS	OUTPUT,0
    GOTO	START7
    BTFSS	OUTPUT,1
    GOTO	ETURN7
    GOTO	WTURN7
    
START8
    CALL	ADC
    CALL	COMPARE
    BTFSS	OUTPUT,0
    GOTO	START8
    BTFSS	OUTPUT,1
    GOTO	ETURN8
    GOTO	WTURN8
 
;FULL WAVE MODE: STRIDE ANGLE = 11.23 DEG
;HALF WAVE MODE: STRIDE ANGLE = 5.625 DEG

;********TURNING EAST******** 
ETURN1
    MOVLW	B'00001001'
    MOVWF	PORTD
    CALL	DELAY3
    GOTO	START2

ETURN2
    MOVLW	B'00001000'
    MOVWF	PORTD
    CALL	DELAY3
    GOTO	START3
    
ETURN3
    MOVLW	B'00001100'
    MOVWF	PORTD
    CALL	DELAY3
    GOTO	START4
   
ETURN4
    MOVLW	B'00000100'
    MOVWF	PORTD
    CALL	DELAY3
    GOTO	START5
   
ETURN5
    MOVLW	B'00000110'
    MOVWF	PORTD
    CALL	DELAY3
    GOTO	START6
    
ETURN6
    MOVLW	B'00000010'
    MOVWF	PORTD
    CALL	DELAY3
    GOTO	START7

ETURN7
    MOVLW	B'00000011'
    MOVWF	PORTD
    CALL	DELAY3
    GOTO	START8
    
ETURN8
    MOVLW	B'00000001'
    MOVWF	PORTD
    CALL	DELAY3
    GOTO	START1
    
    
    
;********TURNING WEST********
WTURN1
    MOVLW	B'00000001'
    MOVWF	PORTD
    CALL	DELAY3
    GOTO	START2

WTURN2
    MOVLW	B'00000011'
    MOVWF	PORTD
    CALL	DELAY3
    GOTO	START3
   
WTURN3
    MOVLW	B'00000010'
    MOVWF	PORTD
    CALL	DELAY3
    GOTO	START4

WTURN4
    MOVLW	B'00000110'
    MOVWF	PORTD
    CALL	DELAY3
    GOTO	START5

WTURN5
    MOVLW	B'00000100'
    MOVWF	PORTD
    CALL	DELAY3
    GOTO	START6
    
WTURN6
    MOVLW	B'00001100'
    MOVWF	PORTD
    CALL	DELAY3
    GOTO	START7

WTURN7
    MOVLW	B'00001000'
    MOVWF	PORTD
    CALL	DELAY3
    GOTO	START8

WTURN8
    MOVLW	B'00001001'
    MOVWF	PORTD
    CALL	DELAY3
    GOTO	START1
 
    
;********ANALOG TO DIGITAL CONVERSION********    
ADC
    ;********EAST(AN0)********
    BCF		ADCON0,5    ;SELECT CHANNEL 0(000)
    BCF		ADCON0,4
    BCF		ADCON0,3

    BSF		ADCON0,0    ;TURN ON ADC
    CALL	DELAY1
    BSF		ADCON0,2    ;START CONVERSION
    
    LOOP1
    BTFSC	ADCON0,2    ;WAIT UNTIL THE CONVERSION IS COMPLETE
    GOTO	LOOP1
    
    MOVF	ADRESH,0    ;MOVE THE VALUE IN ADRESH TO W REGISTER
    MOVWF	EAST	    ;MOVE THE VALUE IN W REGISTER TO EAST
    CALL	DELAY2
    CALL	DELAY2
    
    ;********WEST(AN1)********
    BCF		ADCON0,5    ;SELECT CHANNEL 1(001)
    BCF		ADCON0,4
    BSF		ADCON0,3

    BSF		ADCON0,0    ;TURN ON ADC
    CALL	DELAY1
    BSF		ADCON0,2    ;START CONVERSION
    
    LOOP2
    BTFSC	ADCON0,2    ;WAIT UNTIL THE CONVERSION IS COMPLETE
    GOTO	LOOP2
    
    MOVF	ADRESH,0    ;MOVE THE VALUE IN ADRESH TO W REGISTER
    MOVWF	WEST	    ;MOVE THE VALUE IN W REGISTER TO WEST
    
    CALL	DELAY2
    CALL	DELAY2
    
RETURN
         

;********COMPARING THE TWO LDR VALUES********
COMPARE
    MOVF	WEST,0	    ;LOAD WEST TO W REGISTER
    SUBWF	EAST,0	    ;(EAST - WEST)
    
    BTFSC	STATUS,Z    ;IF EAST=WEST => Z=1 . ELSEIF EAST><WEST => Z=0
    GOTO	EQUAL	    ;IF Z=0 SKIP THIS INSTRUCTION
	
    BTFSC	STATUS,C    ;IF EAST<WEST => C=0 . ELSEIF EAST>=WEST => C=1 
    GOTO	GREATER	    ;IF C=0 SKIP THIS INSTRUCTION
    GOTO	LESS
	
    LESS		    ;EAST<WEST
    BCF		STATUS,C
    BCF		STATUS,Z
    MOVF	DEF,0	    ;LOAD REF TO W REGISTER
    ADDWF	EAST,1
    CALL	COMPARE3
    BCF		STATUS,C
    BCF		STATUS,Z
    GOTO	END_SUB
	
    EQUAL		    ;EAST=WEST
    CALL	CASE1
    BCF		STATUS,C
    BCF		STATUS,Z
    GOTO    	END_SUB
	
    GREATER		    ;EAST>WEST
    BCF		STATUS,C
    BCF		STATUS,Z
    MOVF	DEF,0	    ;LOAD REF TO W REGISTER
    ADDWF	WEST,1
    CALL	COMPARE2
    BCF		STATUS,C
    BCF		STATUS,Z
    GOTO	END_SUB
	
    END_SUB
RETURN
    

COMPARE2
    BCF		STATUS,C
    BCF		STATUS,Z
    MOVF	WEST,0	    ;LOAD WEST TO W REGISTER
    SUBWF	EAST,0	    ;(EAST - WEST)
    
    BTFSC	STATUS,Z    ;IF EAST=WEST => Z=1 . ELSEIF EAST><WEST => Z=0
    GOTO	EQUAL2	    ;IF Z=0 SKIP THIS INSTRUCTION
	
    BTFSC	STATUS,C    ;IF EAST<WEST => C=0 . ELSEIF EAST>=WEST => C=1 
    GOTO	GREATER2    ;IF C=0 SKIP THIS INSTRUCTION
    GOTO	LESS2
    
    LESS2
    CALL	CASE1
    BCF		STATUS,C
    BCF		STATUS,Z
    GOTO	END_SUB2
    
    EQUAL2
    CALL	CASE1
    BCF		STATUS,C
    BCF		STATUS,Z
    GOTO	END_SUB2
    
    GREATER2
    CALL	CASE2
    BCF		STATUS,C
    BCF		STATUS,Z
    GOTO	END_SUB2
    
    END_SUB2
    
RETURN
    

COMPARE3
    BCF		STATUS,C
    BCF		STATUS,Z
    MOVF	EAST,0	    ;LOAD EAST TO W REGISTER
    SUBWF	WEST,0	    ;(WEST - EAST)
    
    BTFSC	STATUS,Z    ;IF EAST=WEST => Z=1 . ELSEIF EAST><WEST => Z=0
    GOTO	EQUAL3	    ;IF Z=0 SKIP THIS INSTRUCTION
	
    BTFSC	STATUS,C    ;IF EAST>WEST => C=0 . ELSEIF EAST<=WEST => C=1 
    GOTO	GREATER3    ;IF C=0 SKIP THIS INSTRUCTION
    GOTO	LESS3
    
    LESS3
    CALL	CASE1
    BCF		STATUS,C
    BCF		STATUS,Z
    GOTO	END_SUB3
    
    EQUAL3
    CALL	CASE1
    BCF		STATUS,C
    BCF		STATUS,Z
    GOTO	END_SUB3
    
    GREATER3
    CALL	CASE3
    BCF		STATUS,C
    BCF		STATUS,Z
    GOTO	END_SUB3
    
    END_SUB3
    
RETURN
    

    
;********CASES FOR OUTPUT********    
CASE1
    MOVLW	B'00000000'
    MOVWF	OUTPUT	    
    MOVWF	PORTC	    ;JUST TO CHECK
RETURN
    
CASE2
    MOVLW	B'00000001'
    MOVWF	OUTPUT
    MOVWF	PORTC
RETURN
    
CASE3
    MOVLW	B'00000011'
    MOVWF	OUTPUT
    MOVWF	PORTC
RETURN
    
    
;********20us DELAY********
DELAY1   
    MOVLW	0X14
    MOVWF	COUNT
LOOP
    DECFSZ	COUNT,1
    GOTO	LOOP
RETURN
	
;********DELAY2 (0.5 SECONDS DELAY)********
DELAY2   
    MOVLW	B'11110110'
    MOVWF	COUNT1
    MOVLW	B'10100010'
    MOVWF	COUNT2
LOOP3 
    DECFSZ	COUNT1,1
    GOTO	LOOP3
    DECFSZ	COUNT2,1
    goto	LOOP3
RETURN 
     
;********DELAY3 (4 SECONDS DELAY)********
DELAY3
    CALL	DELAY2
    CALL	DELAY2
    CALL	DELAY2
    CALL	DELAY2
    CALL	DELAY2
    CALL	DELAY2
    CALL	DELAY2
    CALL	DELAY2
RETURN
    

;INTERRUPT ROUTINE TO TURN TO EASTMOST POSITION
INTERRUPT   
    MOVWF	TEMPW	    ;STORE THE VALUE OF W TEMPORARILY
    CALL	WEST2EAST
    CALL        DELAY2	    ;ADDING DELAY
    CALL        DELAY2	    
    BCF		INTCON,1    ;CLEAR FLAGE TO ENABLE MORE INTERRUPTS
    MOVF	TEMPW,0	    ;RESTORE W TO THE VALUE BEFORE INTERRUPT
RETFIE			    ;COME OUT OF INTERRUPT ROUTINE    
    
    
WEST2EAST		    ;11 FULL WAVE STEPS
    MOVLW	B'00001000'
    MOVWF	PORTD
    CALL	DELAY3
    
    MOVLW	B'00000100'
    MOVWF	PORTD
    CALL	DELAY3
    
    MOVLW	B'00000010'
    MOVWF	PORTD
    CALL	DELAY3
    
    MOVLW	B'00000001'
    MOVWF	PORTD
    CALL	DELAY3
    
    MOVLW	B'00001000'
    MOVWF	PORTD
    CALL	DELAY3
    
    MOVLW	B'00000100'
    MOVWF	PORTD
    CALL	DELAY3
    
    MOVLW	B'00000010'
    MOVWF	PORTD
    CALL	DELAY3
    
    MOVLW	B'00000001'
    MOVWF	PORTD
    CALL	DELAY3
    
    MOVLW	B'00001000'
    MOVWF	PORTD
    CALL	DELAY3
    
    MOVLW	B'00000100'
    MOVWF	PORTD
    CALL	DELAY3
    
    MOVLW	B'00000010'
    MOVWF	PORTD
    CALL	DELAY3
    
    MOVLW	B'00000001'
    MOVWF	PORTD
    CALL	DELAY3
RETURN   
   
     
END


